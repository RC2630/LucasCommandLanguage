// Here is the implementation of bubble sort in Java:
//
//  private static void sort(Integer[] a) {
//    for (int i = a.length - 1; i > 0; i--) {
//      for (int j = 1; j <= i; j++) {
//        if (a[j - 1] > a[j]) {
//          int t = a[j];
//          a[j] = a[j - 1];
//          a[j - 1] = t;
//        }
//      }
//    }
//  }
//
// Your task is to implement this algorithm in LCL. Here is what you will need to do:
//
// 1. You will take in a string by console. Each character in the string represents a single-digit positive integer.
// 2. You will swap the positions of the characters in that string, such that after the swaps, the digits in the string are sorted. Use the bubble sort algorithm above.
// 3. Remember that you can only compare numbers, not characters - cast the characters to numbers before comparing, then back to characters for the final answer.
// 4. Your solution must work for input strings of any length.
//
// HAVE FUN!

// DO NOT TOUCH THIS SECTION
/input s String Enter your string here (only digits allowed, any length is OK): 
/store og {s} String
// END NO-TOUCH SECTION

// YOUR SOLUTION HERE





// END YOUR SOLUTION

// DO NOT TOUCH THIS SECTION
/line
original string: {og}
  sorted string: {s}
/line
// END NO-TOUCH SECTION